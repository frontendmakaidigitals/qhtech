name: Deploy Next.js App - Production
on:
  push:
    branches:
      - master
jobs:
  build-and-deploy:
    name: Build and Deploy to Production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-prod-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-prod-${{ hashFiles('**/package-lock.json') }}-

      - name: Build project
        run: npm run build

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Upload project files via rsync
        run: |
          rsync -avz --delete --exclude '.git' --exclude 'node_modules' \
            -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa" \
            ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/insightvision/

      - name: Deploy and run with PM2
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd ~/insightvision &&
            
            # Stop and delete existing PM2 process if it exists
            pm2 delete insightvision || true
            
            # Check if port 3002 is in use and kill the process
            PORT=3002
            PID=\$(lsof -t -i:\$PORT) || true
            [ ! -z \"\$PID\" ] && kill -9 \$PID || true
            
            # Install dependencies
            npm ci --omit=dev &&
            npm i sharp &&
            
            # Start the application with PM2
            PORT=3002 pm2 start npm --name insightvision -- start
            
            # Enable timestamp logging and save the PM2 process
            pm2 save
            pm2 set pm2:logs:timestamp true
            
            # Verify app is running
            sleep 5
            pm2 list | grep -q 'insightvision.*online' && echo 'App started successfully' || (pm2 logs insightvision --lines 50 && exit 1)
          "
