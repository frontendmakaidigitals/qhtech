name: Deploy Next.js App - Production
on:
  push:
    branches:
      - staging
jobs:
  build-and-deploy:
    name: Build and Deploy to Production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-prod-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-prod-${{ hashFiles('**/package-lock.json') }}-

      - name: Build project
        run: npm run build

      - name: Install SSH Key with Passphrase
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          echo "${{ secrets.SSH_PASSPHRASE }}" | ssh-add ~/.ssh/id_rsa
        env:
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}

      - name: Debug SSH connection
        run: |
          ssh -v ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'SSH connection successful'"

      - name: Deploy with rsync
        run: |
          rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" --delete -v .next/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/interzens/.next/
          rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" -v package.json package-lock.json next.config.js ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/interzens/
          rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" -v public/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/interzens/public/

      - name: Deploy and run with PM2
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd ~/interzens &&
            npm ci --omit=dev &&
            npm install -g pm2 next &&
            npm i sharp &&
            pm2 delete interzens || true &&
            pm2 start npm --name 'interzens' -- start &&
            pm2 save &&
            pm2 list | grep -q 'interzens.*online' && echo 'App started successfully' || (pm2 logs interzens --lines 50 && exit 1)
          "
